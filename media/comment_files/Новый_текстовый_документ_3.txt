{% load tz %}

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Комментарии</title>
  <style>
    /* Общие стили */
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
    }

    /* Заголовок */
    h2 {
      background-color: #525F7B;
      color: #fff;
      padding: 20px;
      margin: 0;
      text-align: center;
      width: 100%;
    }

    /* Контейнер для комментариев и формы */
    .comments-container {
        max-width: 800px;
        width: 100%;
        margin-top: 20px;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
    }

    /* Форма добавления комментария и файла */
    #comment-form {
      margin-bottom: 20px;
      padding: 10px;
      background-color: #f9f9f9;
      border: 1px solid #ccc;
      border-radius: 5px;
      width: 100%;
      box-sizing: border-box;
    }

    #comment-textarea {
      width: calc(100% - 22px); /* Учитываем padding и border в общей ширине */
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      height: 100px;
      resize: none;
      margin-bottom: 10px;
      box-sizing: border-box;
    }

    button[type="submit"] {
      width: 100%;
      background-color: #007bff;
      color: #fff;
      border: none;
      padding: 10px 0;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease-in-out;
    }

    button[type="submit"]:hover {
      background-color: #0056b3;
    }

    /* Комментарии */
    .comment {
      background-color: #fff;
      border: 1px solid #ccc;
      border-radius: 5px;
      padding: 15px;
      margin: 15px 0;
      box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease-in-out;
      width: 100%;
      box-sizing: border-box;
    }

    .comment:hover {
      transform: scale(1.02);
    }

    .comment-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .author {
      font-weight: bold;
      font-size: 16px;
    }

    .time {
      font-size: 14px;
      color: #777;
    }

    .comment-text {
      font-size: 18px;
      line-height: 1.4;
    }

    .file-list {
      margin-top: 10px;
    }

    .file-item {
      list-style-type: none;
      margin: 5px 0;
    }

    .file-link {
      color: #007bff;
      text-decoration: none;
      transition: color 0.3s ease-in-out;
    }

    .file-link:hover {
      color: #0056b3;
    }
  </style>
</head>
<body>


<form method="post" enctype="multipart/form-data" id="comment-form">
  {% csrf_token %}
  <label for="comment-textarea">Оставьте свой комментарий:</label>
  <textarea id="comment-textarea" name="comment" placeholder="Введите ваш комментарий здесь" required></textarea>
  <label for="file-input">Выберите файл:</label>
  <input type="file" id="file-input" name="file" accept=".pdf, .doc, .docx, .txt">
  <button type="submit">Отправить комментарий и файл</button>
</form>
<h2>Комментарии</h2>
<div class="comments-container">
    {% for comment in comments %}
    <div class="comment">
        <div class="comment-header">
            <span class="author">{{ comment.user }}</span>
            <span class="time">{{ comment.created_at }}</span>
        </div>
        <div class="comment-text">{{ comment.text }}</div>
        {% for file in comment.commentfile_set.all %}
        <div class="file-list">
            <ul>
                <li>
                    <a class="file-link" href="{{ file.file.url }}" download>{{ file.file.name }}</a>
                </li>
            </ul>
        </div>
        {% endfor %}
    </div>
    {% endfor %}


</div>

<script>
    document.getElementById("comment-form").addEventListener("submit", function(event) {
        event.preventDefault();

        var commentText = document.getElementById("comment-textarea").value;
        var fileInput = document.getElementById("file-input");
        var formData = new FormData();
        formData.append('comment', commentText);
        if (fileInput.files.length > 0) {
            formData.append('file', fileInput.files[0]);
        }

        fetch('/path/to/add_comment/' + ticketId + '/', {
            method: 'POST',
            body: formData,
            credentials: 'same-origin',
        })
        .then(response => response.json())
        .then(data => {
            if (data.errors) {
                // Обработка ошибок валидации формы, если они есть
                console.log('Validation errors:', data.errors);
            } else {
                // Обновляем комментарии и файлы в DOM, используя данные из data
                var commentContainer = document.createElement("div");
                commentContainer.className = "comment";
                // ... ваш существующий код для создания комментария ...
                document.querySelector(".comments-container").appendChild(commentContainer);

                // После успешной отправки, очистите текстовое поле и поле для файла
                document.getElementById("comment-textarea").value = "";
                fileInput.value = "";
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });
</script>

</body>
</html>


@login_required
def add_comment(request, ticket_id):
    ticket = get_object_or_404(Ticket, id=ticket_id)
    comments = Comment.objects.filter(ticket=ticket)
    
    if request.method == 'POST':
        form = CommentForm(request.POST)
        file_form = CommentFileForm(request.POST, request.FILES)
        
        if form.is_valid() and file_form.is_valid():
            comment = form.save(commit=False)
            comment.ticket = ticket
            comment.user = request.user.username  # Сохраняем имя пользователя
            comment.save()

            if 'file' in request.FILES:
                uploaded_file = request.FILES['file']
                comment_file = CommentFile(comment=comment, file=uploaded_file)
                comment_file.save()

    else:
        form = CommentForm()
        file_form = CommentFileForm()

    return render(request, 'add_comment.html', {'ticket': ticket, 'comments': comments, 'form': form, 'file_form': file_form})













{% load tz %}

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Комментарии</title>
  <style>
    /* Общие стили */
    body {
      font-family: Arial, sans-serif;
      background-color: #f5f5f5;
      margin: 0;
      padding: 0;
    }

    /* Заголовок */
    h2 {
      background-color: #525F7B;
      color: #fff;
      padding: 20px;
      margin: 0;
      text-align: center;
    }

    /* Контейнер для комментариев и формы */
    .comments-container {
      max-width: 800px;
      margin: 20px auto;
      padding: 20px;
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
    }

    /* Форма добавления комментария */
    #comment-form {
      margin-bottom: 20px;
      padding: 10px;
      background-color: #f9f9f9;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    #comment-textarea {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      height: 100px;
      resize: none;
    }

    label {
      font-weight: bold;
    }

    button[type="submit"] {
      background-color: #007bff;
      color: #fff;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease-in-out;
    }

    button[type="submit"]:hover {
      background-color: #0056b3;
    }

    /* Комментарии */
    .comment {
      background-color: #fff;
      border: 1px solid #ccc;
      border-radius: 5px;
      padding: 15px;
      margin: 15px 0;
      box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease-in-out;
    }

    .comment:hover {
      transform: scale(1.02);
    }

    .comment-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .author {
      font-weight: bold;
      font-size: 16px;
    }

    .time {
      font-size: 14px;
      color: #777;
    }

    .comment-text {
      font-size: 18px;
      line-height: 1.4;
    }

    /* Файлы */
    .file-list {
      margin-top: 10px;
    }

    .file-item {
      list-style-type: none;
      margin: 5px 0;
    }

    .file-link {
      color: #007bff;
      text-decoration: none;
      transition: color 0.3s ease-in-out;
    }

    .file-link:hover {
      color: #0056b3;
    }
  </style>
</head>
<body>

<div class="comments-container" id="comments-container">
  <!-- Форма добавления комментария и файла -->
  <div id="comment-file-form">
    <form method="post" enctype="multipart/form-data" id="comment-form">
      {% csrf_token %}
      <label for="comment-textarea">Оставьте свой комментарий:</label>
      <textarea id="comment-textarea" name="comment" placeholder="Введите ваш комментарий здесь" required></textarea>
      <label for="file-input">Выберите файл:</label>
      <input type="file" id="file-input" name="file" accept=".pdf, .doc, .docx, .txt">
      <button type="submit">Отправить комментарий и файл</button>
    </form>
  </div>

  <!-- Список комментариев с файлами -->
  <div id="comments-list"></div>

  {% for comment in comments %}
  <div class="comment">
      <div class="comment-header">
          <span class="author">{{ comment.user }}</span>
          <span class="time">{{ comment.created_at }}</span>
      </div>
      <div class="comment-text">{{ comment.text }}</div>
      {% for file in comment.commentfile_set.all %}
      <div class="file-list">
          <ul>
              <li>
                  <a class="file-link" href="{{ file.file.url }}" download>{{ file.file.name }}</a>
              </li>
          </ul>
      </div>
      {% endfor %}
  </div>
  {% endfor %}
</div>

<script>
 document.getElementById("comment-form").addEventListener("submit", function(event) {
      event.preventDefault();

      var commentText = document.getElementById("comment-textarea").value;
      var fileInput = document.getElementById("file-input");
      var formData = new FormData();
      formData.append('comment', commentText);
      if (fileInput.files.length > 0) {
        formData.append('file', fileInput.files[0]);
      }

      fetch('/add_comment/{{ ticket.id }}/', {
        method: 'POST',
        body: formData,
        credentials: 'same-origin',
        headers: {
            'X-CSRFToken': getCookie('csrftoken')
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.errors) {
          console.log('Validation errors:', data.errors);
        } else {
          // Обновляем комментарии и файлы в DOM, используя данные из data
          var commentContainer = document.createElement("div");
          commentContainer.className = "comment";
          // Заполните commentContainer данными из data
          document.getElementById("comments-list").appendChild(commentContainer);

          // После успешной отправки, очистите текстовое поле и поле для файла
          document.getElementById("comment-textarea").value = "";
          fileInput.value = "";
        }
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });

    function getCookie(name) {
        var value = "; " + document.cookie;
        var parts = value.split("; " + name + "=");
        if (parts.length == 2) return parts.pop().split(";").shift();
    }
</script>

</body>
</html>
